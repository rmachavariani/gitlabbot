{% if build.profile.crons %}
{% set image = env.DOCKER_IMAGE %}
---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: {{service.name}}-scheduler-updater
  namespace: {{build.profile.namespace}}
  labels:
    app: {{service.name}}-scheduler-updater
spec:
  schedule: "{{build.profile.updater_schedule}}"
  concurrencyPolicy: Forbid
  startingDeadlineSeconds: 900
  successfulJobsHistoryLimit: 1
  failedJobsHistoryLimit: 1
  jobTemplate:
    spec:
      activeDeadlineSeconds: 840
      backoffLimit: 5
      template:
        spec:
          imagePullSecrets:
          - name: regcred
          containers:
          - name: {{service.name}}-scheduler-updater
            image: {{image}}
            imagePullPolicy: IfNotPresent
            envFrom:
            - configMapRef:
                name: {{service.name}}-config
            command: ['python3', 'updater.py']
          restartPolicy: Never
---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: {{service.name}}-scheduler-reminders
  namespace: {{build.profile.namespace}}
  labels:
    app: {{service.name}}-scheduler-reminders
spec:
  schedule: "30 13 * * *"
  concurrencyPolicy: Forbid
  successfulJobsHistoryLimit: 1
  startingDeadlineSeconds: 600
  failedJobsHistoryLimit: 1
  jobTemplate:
    spec:
      activeDeadlineSeconds: 3600
      backoffLimit: 5
      template:
        spec:
          imagePullSecrets:
          - name: regcred
          containers:
          - name: {{service.name}}-scheduler-reminders
            image: {{image}}
            imagePullPolicy: IfNotPresent
            envFrom:
            - configMapRef:
                name: {{service.name}}-config
            command: ['python3', 'slack_scheduled_messages.py', 'send_timed_message_reminders']
          restartPolicy: Never
---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: {{service.name}}-scheduler-joke
  namespace: {{build.profile.namespace}}
  labels:
    app: {{service.name}}-scheduler-joke
spec:
  schedule: "0 11 * * *"
  concurrencyPolicy: Forbid
  successfulJobsHistoryLimit: 1
  startingDeadlineSeconds: 600
  failedJobsHistoryLimit: 1
  jobTemplate:
    spec:
      activeDeadlineSeconds: 3600
      backoffLimit: 5
      template:
        spec:
          imagePullSecrets:
          - name: regcred
          containers:
          - name: {{service.name}}-scheduler-joke
            image: {{image}}
            imagePullPolicy: IfNotPresent
            envFrom:
            - configMapRef:
                name: {{service.name}}-config
            command: ['python3', 'slack_scheduled_messages.py', 'send_timed_message_joke']
          restartPolicy: Never
---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: {{service.name}}-scheduler-compliment
  namespace: {{build.profile.namespace}}
  labels:
    app: {{service.name}}-scheduler-compliment
spec:
  schedule: "0 13 * * *"
  concurrencyPolicy: Forbid
  successfulJobsHistoryLimit: 1
  failedJobsHistoryLimit: 1
  startingDeadlineSeconds: 600
  jobTemplate:
    spec:
      activeDeadlineSeconds: 3600
      backoffLimit: 5
      template:
        spec:
          imagePullSecrets:
          - name: regcred
          containers:
          - name: {{service.name}}-scheduler-compliment
            image: {{image}}
            imagePullPolicy: IfNotPresent
            envFrom:
            - configMapRef:
                name: {{service.name}}-config
            command: ['python3', 'slack_scheduled_messages.py', 'send_timed_message_compliment']
          restartPolicy: Never
---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: {{service.name}}-scheduler-moviereminders
  namespace: {{build.profile.namespace}}
  labels:
    app: {{service.name}}-scheduler-moviereminders
spec:
  schedule: "0 9 * * *"
  concurrencyPolicy: Forbid
  successfulJobsHistoryLimit: 1
  startingDeadlineSeconds: 600
  failedJobsHistoryLimit: 1
  jobTemplate:
    spec:
      activeDeadlineSeconds: 3600
      backoffLimit: 5
      template:
        spec:
          imagePullSecrets:
          - name: regcred
          containers:
          - name: {{service.name}}-scheduler-moviereminders
            image: {{image}}
            imagePullPolicy: IfNotPresent
            envFrom:
            - configMapRef:
                name: {{service.name}}-config
            command: ['python3', 'slack_scheduled_messages.py', 'send_movie_reminders']
          restartPolicy: Never
---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: {{service.name}}-scheduler-standups
  namespace: {{build.profile.namespace}}
  labels:
    app: {{service.name}}-scheduler-standups
spec:
  schedule: "0 * * * *"
  concurrencyPolicy: Forbid
  successfulJobsHistoryLimit: 1
  startingDeadlineSeconds: 600
  failedJobsHistoryLimit: 1
  jobTemplate:
    spec:
      activeDeadlineSeconds: 3600
      backoffLimit: 5
      template:
        spec:
          imagePullSecrets:
          - name: regcred
          containers:
          - name: {{service.name}}-scheduler-standups
            image: {{image}}
            imagePullPolicy: IfNotPresent
            envFrom:
            - configMapRef:
                name: {{service.name}}-config
            command: ['python3', 'slack_scheduled_messages.py', 'set_standup_message_times']
          restartPolicy: Never
---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: {{service.name}}-scheduler-fitness
  namespace: {{build.profile.namespace}}
  labels:
    app: {{service.name}}-scheduler-fitness
spec:
  schedule: "0 7 * * 4"
  concurrencyPolicy: Forbid
  successfulJobsHistoryLimit: 1
  startingDeadlineSeconds: 600
  failedJobsHistoryLimit: 1
  jobTemplate:
    spec:
      activeDeadlineSeconds: 3600
      backoffLimit: 5
      template:
        spec:
          imagePullSecrets:
          - name: regcred
          containers:
          - name: {{service.name}}-scheduler-fitness
            image: {{image}}
            imagePullPolicy: IfNotPresent
            envFrom:
            - configMapRef:
                name: {{service.name}}-config
            command: ['python3', 'slack_scheduled_messages.py', 'send_fitness_reminders']
          restartPolicy: Never
---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: {{service.name}}-scheduler-boardupdater
  namespace: {{build.profile.namespace}}
  labels:
    app: {{service.name}}-scheduler-boardupdater
spec:
  schedule: "5 * * * *"
  concurrencyPolicy: Forbid
  successfulJobsHistoryLimit: 1
  startingDeadlineSeconds: 600
  failedJobsHistoryLimit: 1
  jobTemplate:
    spec:
      activeDeadlineSeconds: 3600
      backoffLimit: 5
      template:
        spec:
          imagePullSecrets:
          - name: regcred
          containers:
          - name: {{service.name}}-scheduler-boardupdater
            image: {{image}}
            imagePullPolicy: IfNotPresent
            envFrom:
            - configMapRef:
                name: {{service.name}}-config
            command: ['python3', 'board_updater.py']
          restartPolicy: Never
---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: {{service.name}}-scheduler-hoursworked
  namespace: {{build.profile.namespace}}
  labels:
    app: {{service.name}}-scheduler-hoursworked
spec:
  schedule: "0 7 * * 1"
  concurrencyPolicy: Forbid
  successfulJobsHistoryLimit: 1
  startingDeadlineSeconds: 600
  failedJobsHistoryLimit: 1
  jobTemplate:
    spec:
      activeDeadlineSeconds: 3600
      backoffLimit: 5
      template:
        spec:
          imagePullSecrets:
          - name: regcred
          containers:
          - name: {{service.name}}-scheduler-hoursworked
            image: {{image}}
            imagePullPolicy: IfNotPresent
            envFrom:
            - configMapRef:
                name: {{service.name}}-config
            command: ['python3', 'slack_scheduled_messages.py', 'send_hours_worked_notifications']
          restartPolicy: Never
---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: {{service.name}}-scheduler-estimateoverview
  namespace: {{build.profile.namespace}}
  labels:
    app: {{service.name}}-scheduler-estimateoverview
spec:
  schedule: "35 7 * * *"
  concurrencyPolicy: Forbid
  successfulJobsHistoryLimit: 1
  startingDeadlineSeconds: 600
  failedJobsHistoryLimit: 1
  jobTemplate:
    spec:
      activeDeadlineSeconds: 3600
      backoffLimit: 5
      template:
        spec:
          imagePullSecrets:
          - name: regcred
          containers:
          - name: {{service.name}}-scheduler-estimateoverview
            image: {{image}}
            imagePullPolicy: IfNotPresent
            envFrom:
            - configMapRef:
                name: {{service.name}}-config
            command: ['python3', 'slack_scheduled_messages.py', 'estimate_almost_reached_overview']
          restartPolicy: Never
---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: {{service.name}}-scheduler-estimaterequests
  namespace: {{build.profile.namespace}}
  labels:
    app: {{service.name}}-scheduler-estimaterequests
spec:
  schedule: "0 11 * * 1"
  concurrencyPolicy: Forbid
  successfulJobsHistoryLimit: 1
  startingDeadlineSeconds: 600
  failedJobsHistoryLimit: 1
  jobTemplate:
    spec:
      activeDeadlineSeconds: 3600
      backoffLimit: 5
      template:
        spec:
          imagePullSecrets:
          - name: regcred
          containers:
          - name: {{service.name}}-scheduler-estimaterequests
            image: {{image}}
            imagePullPolicy: IfNotPresent
            envFrom:
            - configMapRef:
                name: {{service.name}}-config
            command: ['python3', 'slack_scheduled_messages.py', 'send_fill_estimate_requests']
          restartPolicy: Never
---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: {{service.name}}-scheduler-foodquestion-weekly
  namespace: {{build.profile.namespace}}
  labels:
    app: {{service.name}}-scheduler-foodquestion-weekly
spec:
  schedule: "0 10 * * 1"
  concurrencyPolicy: Forbid
  successfulJobsHistoryLimit: 5
  startingDeadlineSeconds: 600
  failedJobsHistoryLimit: 5
  jobTemplate:
    spec:
      activeDeadlineSeconds: 3600
      backoffLimit: 5
      template:
        spec:
          imagePullSecrets:
          - name: regcred
          containers:
          - name: {{service.name}}-scheduler-foodquestion-weekly
            image: {{image}}
            imagePullPolicy: IfNotPresent
            envFrom:
            - configMapRef:
                name: {{service.name}}-config
            command: ['python3', 'slack_scheduled_messages.py', 'send_weekly_food_take_out_question']
          restartPolicy: Never
---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: {{service.name}}-scheduler-food-overview-monthly
  namespace: {{build.profile.namespace}}
  labels:
    app: {{service.name}}-scheduler-food-overview-monthly
spec:
  schedule: "0 10 1 * *"
  concurrencyPolicy: Forbid
  successfulJobsHistoryLimit: 5
  startingDeadlineSeconds: 600
  failedJobsHistoryLimit: 5
  jobTemplate:
    spec:
      activeDeadlineSeconds: 3600
      backoffLimit: 5
      template:
        spec:
          imagePullSecrets:
          - name: regcred
          containers:
          - name: {{service.name}}-scheduler-food-overview-monthly
            image: {{image}}
            imagePullPolicy: IfNotPresent
            envFrom:
            - configMapRef:
                name: {{service.name}}-config
            command: ['python3', 'slack_scheduled_messages.py', 'send_monthly_food_overview']
          restartPolicy: Never
{% endif %}